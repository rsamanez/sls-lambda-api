service: sls-lambda-api

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage,'dev'}
  region: us-east-1
  profile: default
  iamRoleStatements: # IAM Role Permissions
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "Ref" : "ServerlessDeploymentBucket"
            - "/*"


# Custom variables
custom:
  stages: # for stage manager
    - dev
    - staging
    - prod

# Plugins
plugins:
  - serverless-stage-manager
  - serverless-offline

# Functions
functions:
  sls-lambda-api:
    name: ${self:service}-${self:provider.stage}-sls-lambda-api
    handler: handler.router
    timeout: 30
    events:
      - http:
          path: 'v1/{proxy+}'
          method: any
